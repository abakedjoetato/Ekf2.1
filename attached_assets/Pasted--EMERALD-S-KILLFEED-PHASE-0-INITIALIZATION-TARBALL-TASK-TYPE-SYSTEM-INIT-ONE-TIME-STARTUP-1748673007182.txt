 EMERALD‚ÄôS KILLFEED ‚Äî PHASE 0 INITIALIZATION (TARBALL)

üß© TASK TYPE: SYSTEM INIT ‚Äî ONE-TIME STARTUP SEQUENCE
üìç This is a single-task atomic operation ‚Äî all steps must complete together.


---

# [PHASE 0] ‚Äî FULL PROJECT INITIALIZATION FROM TARBALL

You are launching a Replit workspace session to initialize a full-featured multi-server, multi-guild Discord bot designed with Pycord 2.6.1. Your job is to extract, configure, and launch the bot in production mode. Follow all steps exactly.


---

‚úÖ Objectives

1. Install unzip and tar utilities if they are not already available in the Replit environment.


2. Extract the project from the uploaded .tar.gz file located in attached_assets.

Do not create a subdirectory structure (i.e., no nesting like /project/project/)

Move all relevant files and folders from the unzipped path to the project root directory



3. Remove unnecessary clutter:

Delete empty folders

Remove duplicate or nested structures

Strip out non-project artifacts or residual scaffolding



4. Log and identify core structures:

Main bot entrypoint (class with main() or bot.run())

All cog files

Configuration files (config.json, .env, or similar)

Command system and event handlers

Database manager, SFTP connectors, parsing systems



5. Inject Replit-provided secrets:
Use os.getenv() to map in secrets already provided by the platform:

BOT_TOKEN

MONGO_URI

RAILWAY_ENVIRONMENT (if applicable)



6. Start the bot in production mode

Use the Replit Run button to launch

Wait for full connection and log verification

Confirm:

‚úÖ Successful Discord gateway connection

‚úÖ All 11+ cogs load without error

‚úÖ Slash commands sync without rate limiting

‚úÖ No unresolved startup exceptions




7. Do not continue to Phase 1 or other work until the bot successfully boots and confirms all systems are operational.




---

üß∑ EXECUTION RULES

‚úÖ This is a single atomic task. No commits, checkpoints, or logs until the full phase is complete.
‚úÖ Do not output anything until the bot is verified to be online and functional.
‚úÖ Do not restructure code or assume missing files ‚Äî use only what is extracted.
‚úÖ Strictly enforce Pycord 2.6.1 ‚Äî reject any fallback to discord.py
‚úÖ Track internal progress using file state markers only, not memory or logs.